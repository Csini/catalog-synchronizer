#application.id=yyyyyyy
#spring.kafka.streams.application-id=product-streams
#spring.kafka.consumer.group-id=product-consumer-group
spring.application.name=catalog-synchronizer
spring.kafka.streams.auto-startup=false

server.port=8081
spring.kafka.bootstrap-servers=localhost:9092

readedFromDb.topic.name=readedFromDb
validProduct.topic.name=validProduct
invalidProduct.topic.name=invalidProduct
flushed.topic.name=flushed
product.topic.name=productEvents
dbevent.topic.name=dbEvents

aggregateWindowInSec=0
flushSize=1000

productPair.store.name=productPairStore


management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

spring.jmx.enabled=false

kafka.backoff.interval=9000
kafka.backoff.max_failure=5

#########
# Springwolf configuration
springwolf.enabled=true
springwolf.docket.base-package=hu.exercise.spring.kafka
springwolf.docket.info.title=${spring.application.name}
springwolf.docket.info.version=1.0.0
springwolf.docket.info.description=Springwolf example project to demonstrate springwolfs abilities, including **markdown** support for descriptions.
springwolf.docket.info.terms-of-service=http://asyncapi.org/terms
springwolf.docket.info.contact.name=springwolf
springwolf.docket.info.contact.email=example@example.com
springwolf.docket.info.contact.url=https://github.com/springwolf/springwolf-core
springwolf.docket.info.license.name=Apache License 2.0
springwolf.payload.extractable-classes.org.apache.kafka.clients.consumer.ConsumerRecord=1

# Springwolf kafka configuration
springwolf.docket.servers.kafka-server.protocol=kafka
springwolf.docket.servers.kafka-server.host=${spring.kafka.bootstrap-servers}
#springwolf.plugin.kafka.publishing.enabled=true
#springwolf.plugin.kafka.publishing.producer.bootstrap-servers=${BOOTSTRAP_SERVER_SASL:localhost:9093}
#springwolf.plugin.kafka.publishing.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#springwolf.plugin.kafka.publishing.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
